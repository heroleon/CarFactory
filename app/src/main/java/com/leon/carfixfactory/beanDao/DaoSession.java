package com.leon.carfixfactory.beanDao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.leon.carfixfactory.bean.CarPartsInfo;
import com.leon.carfixfactory.bean.WorkerInfo;
import com.leon.carfixfactory.bean.DriverInfo;
import com.leon.carfixfactory.bean.RepairRecord;
import com.leon.carfixfactory.bean.AccessoriesInfo;

import com.leon.carfixfactory.beanDao.CarPartsInfoDao;
import com.leon.carfixfactory.beanDao.WorkerInfoDao;
import com.leon.carfixfactory.beanDao.DriverInfoDao;
import com.leon.carfixfactory.beanDao.RepairRecordDao;
import com.leon.carfixfactory.beanDao.AccessoriesInfoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig carPartsInfoDaoConfig;
    private final DaoConfig workerInfoDaoConfig;
    private final DaoConfig driverInfoDaoConfig;
    private final DaoConfig repairRecordDaoConfig;
    private final DaoConfig accessoriesInfoDaoConfig;

    private final CarPartsInfoDao carPartsInfoDao;
    private final WorkerInfoDao workerInfoDao;
    private final DriverInfoDao driverInfoDao;
    private final RepairRecordDao repairRecordDao;
    private final AccessoriesInfoDao accessoriesInfoDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        carPartsInfoDaoConfig = daoConfigMap.get(CarPartsInfoDao.class).clone();
        carPartsInfoDaoConfig.initIdentityScope(type);

        workerInfoDaoConfig = daoConfigMap.get(WorkerInfoDao.class).clone();
        workerInfoDaoConfig.initIdentityScope(type);

        driverInfoDaoConfig = daoConfigMap.get(DriverInfoDao.class).clone();
        driverInfoDaoConfig.initIdentityScope(type);

        repairRecordDaoConfig = daoConfigMap.get(RepairRecordDao.class).clone();
        repairRecordDaoConfig.initIdentityScope(type);

        accessoriesInfoDaoConfig = daoConfigMap.get(AccessoriesInfoDao.class).clone();
        accessoriesInfoDaoConfig.initIdentityScope(type);

        carPartsInfoDao = new CarPartsInfoDao(carPartsInfoDaoConfig, this);
        workerInfoDao = new WorkerInfoDao(workerInfoDaoConfig, this);
        driverInfoDao = new DriverInfoDao(driverInfoDaoConfig, this);
        repairRecordDao = new RepairRecordDao(repairRecordDaoConfig, this);
        accessoriesInfoDao = new AccessoriesInfoDao(accessoriesInfoDaoConfig, this);

        registerDao(CarPartsInfo.class, carPartsInfoDao);
        registerDao(WorkerInfo.class, workerInfoDao);
        registerDao(DriverInfo.class, driverInfoDao);
        registerDao(RepairRecord.class, repairRecordDao);
        registerDao(AccessoriesInfo.class, accessoriesInfoDao);
    }
    
    public void clear() {
        carPartsInfoDaoConfig.clearIdentityScope();
        workerInfoDaoConfig.clearIdentityScope();
        driverInfoDaoConfig.clearIdentityScope();
        repairRecordDaoConfig.clearIdentityScope();
        accessoriesInfoDaoConfig.clearIdentityScope();
    }

    public CarPartsInfoDao getCarPartsInfoDao() {
        return carPartsInfoDao;
    }

    public WorkerInfoDao getWorkerInfoDao() {
        return workerInfoDao;
    }

    public DriverInfoDao getDriverInfoDao() {
        return driverInfoDao;
    }

    public RepairRecordDao getRepairRecordDao() {
        return repairRecordDao;
    }

    public AccessoriesInfoDao getAccessoriesInfoDao() {
        return accessoriesInfoDao;
    }

}
